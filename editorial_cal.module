<?php

/**
 * Implements hook_menu().
 */
function editorial_cal_menu() {
  $items = array();

  $items['calendar'] = array(
    'title' => 'Editorial Calendar',
    'page callback' => 'editorial_cal_view',
    'type' => MENU_SUGGESTED_ITEM,
    'access callback' => 'editorial_cal_access',
  );

  $items['editorial_cal/%ctools_js/add'] = array(
    'title' => 'Add New Draft',
    'page callback' => 'editorial_cal_create_post_form',
    'page arguments' => array(1),
    'access callback' => 'editorial_cal_access',
      'type' => MENU_CALLBACK,
  );

  $items['drafts/%'] = array(
    'title' => 'Get Drafts',
    'page callback' => 'editorial_cal_drafts',
    'page arguments' => array(1),
    'access callback' => 'editorial_cal_access',
    'type' => MENU_LOCAL_TASK,
  );

  $items['calform'] = array(
    'title' => 'Example Form',
    'description' => 'A form to mess around with.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('editorial_cal_add_draft_form', '2016-11-08'),
    'access callback' => 'editorial_cal_access',
  );

  return $items;
}

/**
 * Implements access callback
 */
function editorial_cal_access() {
  global $user;

  if (in_array('administrator', $user->roles)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Form constructor for the hours add form.
 */
function editorial_cal_create_post_form($js = NULL) {
  if (!$js) {
    return drupal_get_form('editorial_cal_add_draft_form', date('Y-m-d'));
  }
  ctools_include('modal');
  ctools_include('ajax');
  $form_state = array(
    'title' => t('Add New Draft'),
    'ajax' => TRUE,
    'ts' => $_POST['post_scheduled_date'],
  );
  if (!empty($_POST['post_scheduled_date'])) {
    $form_state['build_info']['args'] = [ $_POST['post_scheduled_date']];
  }
  $output = ctools_modal_form_wrapper('editorial_cal_add_draft_form', $form_state);

  $commands = $output;
  if (!empty($form_state['executed'])) {
    ctools_include('ajax');
    $commands = array(
      ctools_modal_command_dismiss(),
      array(
        'command' => 'schedule_post_reload',
      ),
    );
  }
  print ajax_render($commands);
  drupal_exit();
}

/**
 * Page callback for /calendar.
 */
function editorial_cal_view() {
  drupal_add_js('https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.2/moment.min.js', 'external');
  drupal_add_js('https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js', 'external');
  drupal_add_css('https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css', 'external');
  drupal_add_js('http://code.jquery.com/ui/1.10.2/jquery-ui.min.js', 'external');
  libraries_load('fullcalendar');
  drupal_add_js(drupal_get_path('module', 'editorial_cal') . '/js/editorial_cal.js');
  drupal_add_css(drupal_get_path('module', 'editorial_cal') . '/css/editorial_cal.css');

  // Include the CTools tools that we need.
  ctools_include('ajax');
  ctools_include('modal');

  // Add CTools' javascript to the page.
  ctools_modal_add_js();

  $build['calendar'] = [ '#markup' => theme('editorial_calendar',[]) ];
  return $build;
}

/**
 * Implements hook_theme().
 */
function editorial_cal_theme() {
  return [
    'editorial_calendar' => [
      'variables' => ['button' => NULL],
      'template' => 'editorial-calendar'
    ],
  ];
}

/**
 * Implements hook_libraries_info().
 */
function editorial_cal_libraries_info() {
  $libraries['fullcalendar'] = array(
    'name' => 'Full Calendar',
    'vendor url' => 'https://fullcalendar.io/',
    'download url' => 'https://fullcalendar.io/download/',
    'version arguments' => array(
      'file' => 'fullcalendar.min.js',
      'pattern' => '/FullCalendar v(\d+\.+\d+)/',
      'lines' => 2,
    ),
    'files' => array(
      'js' => array(
        'fullcalendar.min.js' => array(
          'scope' => 'footer',
        ),
      ),
      'css' => array(
        'fullcalendar.min.css',
      ),
    ),
  );
  return $libraries;
}

function editorial_cal_drafts($tid) {
  $drafts = _editorial_cal_get_scheduled_drafts_json($tid);
  drupal_add_http_header('Content-Type', 'application/json');
  echo $drafts;
  drupal_exit();
}

function _editorial_cal_get_scheduled_drafts_json($tid) {
  $json_dump = [];
  $query = db_select('node', 'n');
  $query->join('scheduler', 'sc', 'sc.nid = n.nid');
  $query->fields('n', ['nid', 'title'])
    ->fields('sc', ['publish_on'])
    ->condition('n.status', 0, '=');

  $query->join('field_data_field_featured_categories', 'cat', 'cat.entity_id = n.nid');
  $query->condition('cat.field_featured_categories_tid', $tid, '=');

  $results = $query->execute();

  while($record = $results->fetchAssoc()) {
    $row = [
      'title' => $record['title'],
      'start' => date('Y-m-d H:i', $record['publish_on']),
      'url' => 'node/' . $record['nid'] . '/edit',
      'description' => $record['title'],
    ];
    $json_dump[] = $row;
  }
  return json_encode($json_dump, JSON_UNESCAPED_SLASHES);
}


function editorial_cal_add_draft_form($form, &$form_state, $timestamp) {
  $form = array();

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
  );

  $form['timestamp'] = array(
    '#type' => 'textfield',
    '#default_value' => array_key_exists('ts', $form_state)?$form_state['ts']:$timestamp,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create Draft'),
  );

  return $form;
}

function editorial_cal_add_draft_form_submit($form, &$form_state) {
  global $user;
  $node = new stdClass();
  $node->title = $form_state['values']['title'];
  $node->type = 'panopoly_page';
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->status = 0;
  $node->field_featured_categories[$node->language][]['tid'] = 2;
  $node->body[$node->language][]['value'] = 'Ex unde eligendi tortor pretium possimus nec totam? Quam euismod.';
  $node = node_submit($node);
  node_save($node);
  db_insert('scheduler')->fields(array(
      'nid' => $node->nid,
      'publish_on' => strtotime($form_state['values']['timestamp']),
      'unpublish_on' => 0,
    ))->execute();
}
